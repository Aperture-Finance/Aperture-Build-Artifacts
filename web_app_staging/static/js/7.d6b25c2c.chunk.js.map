{"version":3,"sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/solana/core-node/bridge.js","../node_modules/node-libs-browser/node_modules/path-browserify/index.js"],"names":["wasm","imports","module","exports","_a","require","TextEncoder","TextDecoder","heap","Array","fill","undefined","getObject","idx","push","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","cachedTextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","heap_next","takeObject","ret","dropObject","cachedTextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","addHeapObject","obj","isLikeNone","x","cachegetFloat64Memory0","debugString","val","type","description","name_1","name","isArray","length_1","debug","i","className","builtInMatches","exec","toString","call","JSON","stringify","_","Error","message","stack","passArray8ToWasm0","getArrayU8FromWasm0","_assertClass","instance","klass","post_message_ix","program_id","payer","emitter","nonce","msg","consistency","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","ptr5","len5","post_vaa_ix","signature_set","vaa","update_guardian_set_ix","set_fees_ix","transfer_fees_ix","upgrade_contract_ix","spill","verify_signatures_ix","guardian_set_index","guardian_set","vaa_data","guardian_set_address","bridge","index","retptr","__wbindgen_add_to_stack_pointer","r0","r1","v1","__wbindgen_free","parse_guardian_set","data","state_address","parse_state","fee_collector_address","claim_address","v2","parse_posted_message","parse_vaa","init","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","cachegetUint32Memory0","passArrayJsValueToWasm0","array","handleError","f","args","apply","this","e","__wbindgen_exn_store","Hash","value","hash_constructor","__wrap","Object","create","prototype","__destroy_into_raw","free","__wbg_hash_free","hash_toString","equals","other","hash_equals","toBytes","hash_toBytes","v0","Instruction","__wbg_instruction_free","Instructions","instructions_constructor","__wbg_instructions_free","instruction","instructions_push","Message","__wbg_message_free","defineProperty","get","__wbg_get_message_recent_blockhash","arg0","__wbg_set_message_recent_blockhash","enumerable","configurable","Pubkey","pubkey_constructor","__wbg_pubkey_free","pubkey_toString","isOnCurve","pubkey_isOnCurve","pubkey_equals","pubkey_toBytes","createWithSeed","base","seed","owner","pubkey_createWithSeed","createProgramAddress","seeds","pubkey_createProgramAddress","findProgramAddress","pubkey_findProgramAddress","SystemInstruction","__wbg_systeminstruction_free","createAccount","from_pubkey","to_pubkey","lamports","space","low0","high0","low1","high1","systeminstruction_createAccount","createAccountWithSeed","low2","high2","systeminstruction_createAccountWithSeed","assign","pubkey","systeminstruction_assign","assignWithSeed","systeminstruction_assignWithSeed","transfer","systeminstruction_transfer","transferWithSeed","from_base","from_seed","from_owner","systeminstruction_transferWithSeed","allocate","systeminstruction_allocate","allocateWithSeed","address","systeminstruction_allocateWithSeed","createNonceAccount","nonce_pubkey","authority","systeminstruction_createNonceAccount","advanceNonceAccount","authorized_pubkey","systeminstruction_advanceNonceAccount","withdrawNonceAccount","systeminstruction_withdrawNonceAccount","authorizeNonceAccount","new_authority","systeminstruction_authorizeNonceAccount","__wbindgen_json_serialize","arg1","__wbindgen_object_drop_ref","__wbindgen_json_parse","parse","__wbg_instruction_new","__wbindgen_string_new","__wbg_pubkey_new","__wbindgen_string_get","__wbindgen_is_undefined","__wbindgen_number_get","Float64Array","__wbindgen_number_new","__wbg_debug_fda1f49ea6af7a1d","console","__wbg_error_8ff19d586a987aef","error","__wbg_info_c8f1b00be4ef10bc","info","__wbg_log_e8ba7b992c7ad0eb","log","__wbg_warn_0227db1aa6989248","warn","__wbg_new_693216e109162396","__wbg_stack_0ddaca5d1abfb52f","__wbg_error_09919627ac0992f5","__wbg_new_94fb1279cf6afea5","__wbindgen_is_function","__wbindgen_is_object","__wbg_next_cabb70b365520721","next","__wbg_next_bf3d83fc18df496e","arguments","__wbg_done_040f966faa9a72b3","done","__wbg_value_419afbd9b9574c4c","__wbg_iterator_4832ef1f15b0382b","Symbol","iterator","__wbg_get_a9cab131e3152c49","Reflect","__wbg_call_ae78342adc33730a","__wbg_newwithlength_e80fb11cf19c1628","__wbg_set_561aac756158708c","arg2","__wbg_isArray_6721f2e508996340","__wbg_push_40c6a90f1805aa90","__wbg_values_b1b9e8c63dbe01c2","values","__wbg_buffer_7af23f65f6c64548","__wbg_new_cc9018bd6f283b6f","__wbg_set_f25e869e4565d2a2","__wbg_length_0acb1cf9bbaf8519","__wbg_instanceof_Uint8Array_edb92795fc0c63b4","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","path","join","__dirname","bytes","readFileSync","wasmModule","WebAssembly","Module","wasmInstance","Instance","__wasm","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","resolve","resolvedPath","resolvedAbsolute","process","cwd","TypeError","charAt","split","p","normalize","isAbsolute","trailingSlash","substr","paths","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str"],"mappings":"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","file":"static/js/7.d6b25c2c.chunk.js","sourcesContent":["\"use strict\";\nvar imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nvar wasm;\nvar _a = require(\"util\"), TextEncoder = _a.TextEncoder, TextDecoder = _a.TextDecoder;\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nfunction getObject(idx) { return heap[idx]; }\nvar WASM_VECTOR_LEN = 0;\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nvar cachedTextEncoder = new TextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nvar heap_next = heap.length;\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\nvar cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\nvar cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\nfunction debugString(val) {\n    // primitive types\n    var type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return \"\" + val;\n    }\n    if (type == 'string') {\n        return \"\\\"\" + val + \"\\\"\";\n    }\n    if (type == 'symbol') {\n        var description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        }\n        else {\n            return \"Symbol(\" + description + \")\";\n        }\n    }\n    if (type == 'function') {\n        var name_1 = val.name;\n        if (typeof name_1 == 'string' && name_1.length > 0) {\n            return \"Function(\" + name_1 + \")\";\n        }\n        else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        var length_1 = val.length;\n        var debug = '[';\n        if (length_1 > 0) {\n            debug += debugString(val[0]);\n        }\n        for (var i = 1; i < length_1; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    var builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    var className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    }\n    else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        }\n        catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return val.name + \": \" + val.message + \"\\n\" + val.stack;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} emitter\n* @param {string} message\n* @param {number} nonce\n* @param {Uint8Array} msg\n* @param {string} consistency\n* @returns {any}\n*/\nmodule.exports.post_message_ix = function (program_id, payer, emitter, message, nonce, msg, consistency) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(emitter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(msg, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(consistency, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ret = wasm.post_message_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, nonce, ptr4, len4, ptr5, len5);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} signature_set\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.post_vaa_ix = function (program_id, payer, signature_set, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(signature_set, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.post_vaa_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.update_guardian_set_ix = function (program_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.update_guardian_set_ix(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.set_fees_ix = function (program_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.set_fees_ix(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.transfer_fees_ix = function (program_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_fees_ix(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} spill\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nmodule.exports.upgrade_contract_ix = function (program_id, payer, spill, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n};\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {number} guardian_set_index\n* @param {any} guardian_set\n* @param {string} signature_set\n* @param {Uint8Array} vaa_data\n* @returns {any}\n*/\nmodule.exports.verify_signatures_ix = function (program_id, payer, guardian_set_index, guardian_set, signature_set, vaa_data) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(signature_set, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa_data, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_signatures_ix(ptr0, len0, ptr1, len1, guardian_set_index, addHeapObject(guardian_set), ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n};\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} bridge\n* @param {number} index\n* @returns {Uint8Array}\n*/\nmodule.exports.guardian_set_address = function (bridge, index) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(bridge, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.guardian_set_address(retptr, ptr0, len0, index);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_guardian_set = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_guardian_set(ptr0, len0);\n    return takeObject(ret);\n};\n/**\n* @param {string} bridge\n* @returns {Uint8Array}\n*/\nmodule.exports.state_address = function (bridge) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(bridge, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.state_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_state = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_state(ptr0, len0);\n    return takeObject(ret);\n};\n/**\n* @param {string} bridge\n* @returns {Uint8Array}\n*/\nmodule.exports.fee_collector_address = function (bridge) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(bridge, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.fee_collector_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {string} program_id\n* @param {Uint8Array} vaa\n* @returns {Uint8Array}\n*/\nmodule.exports.claim_address = function (program_id, vaa) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.claim_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n};\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_posted_message = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_posted_message(ptr0, len0);\n    return takeObject(ret);\n};\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nmodule.exports.parse_vaa = function (data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_vaa(ptr0, len0);\n    return takeObject(ret);\n};\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(\"expected instance of \" + klass.name);\n    }\n    return instance.ptr;\n}\n/**\n* Initialize Javascript logging and panic handler\n*/\nmodule.exports.init = function () {\n    wasm.init();\n};\nvar u32CvtShim = new Uint32Array(2);\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\nvar cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\nfunction passArrayJsValueToWasm0(array, malloc) {\n    var ptr = malloc(array.length * 4);\n    var mem = getUint32Memory0();\n    for (var i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    }\n    catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nvar Hash = /** @class */ (function () {\n    /**\n    * Create a new Hash object\n    *\n    * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`\n    * @param {any} value\n    */\n    function Hash(value) {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_constructor(retptr, addHeapObject(value));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Hash.__wrap(r0);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    Hash.__wrap = function (ptr) {\n        var obj = Object.create(Hash.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Hash.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Hash.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_hash_free(ptr);\n    };\n    /**\n    * Return the base58 string representation of the hash\n    * @returns {string}\n    */\n    Hash.prototype.toString = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_toString(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    };\n    /**\n    * Checks if two `Hash`s are equal\n    * @param {Hash} other\n    * @returns {boolean}\n    */\n    Hash.prototype.equals = function (other) {\n        _assertClass(other, Hash);\n        var ret = wasm.hash_equals(this.ptr, other.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Return the `Uint8Array` representation of the hash\n    * @returns {Uint8Array}\n    */\n    Hash.prototype.toBytes = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_toBytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    return Hash;\n}());\nmodule.exports.Hash = Hash;\n/**\n* A directive for a single invocation of a Solana program.\n*\n* An instruction specifies which program it is calling, which accounts it may\n* read or modify, and additional data that serves as input to the program. One\n* or more instructions are included in transactions submitted by Solana\n* clients. Instructions are also used to describe [cross-program\n* invocations][cpi].\n*\n* [cpi]: https://docs.solana.com/developing/programming-model/calling-between-programs\n*\n* During execution, a program will receive a list of account data as one of\n* its arguments, in the same order as specified during `Instruction`\n* construction.\n*\n* While Solana is agnostic to the format of the instruction data, it has\n* built-in support for serialization via [`borsh`] and [`bincode`].\n*\n* [`borsh`]: https://docs.rs/borsh/latest/borsh/\n* [`bincode`]: https://docs.rs/bincode/latest/bincode/\n*\n* # Specifying account metadata\n*\n* When constructing an [`Instruction`], a list of all accounts that may be\n* read or written during the execution of that instruction must be supplied as\n* [`AccountMeta`] values.\n*\n* Any account whose data may be mutated by the program during execution must\n* be specified as writable. During execution, writing to an account that was\n* not specified as writable will cause the transaction to fail. Writing to an\n* account that is not owned by the program will cause the transaction to fail.\n*\n* Any account whose lamport balance may be mutated by the program during\n* execution must be specified as writable. During execution, mutating the\n* lamports of an account that was not specified as writable will cause the\n* transaction to fail. While _subtracting_ lamports from an account not owned\n* by the program will cause the transaction to fail, _adding_ lamports to any\n* account is allowed, as long is it is mutable.\n*\n* Accounts that are not read or written by the program may still be specified\n* in an `Instruction`'s account list. These will affect scheduling of program\n* execution by the runtime, but will otherwise be ignored.\n*\n* When building a transaction, the Solana runtime coalesces all accounts used\n* by all instructions in that transaction, along with accounts and permissions\n* required by the runtime, into a single account list. Some accounts and\n* account permissions required by the runtime to process a transaction are\n* _not_ required to be included in an `Instruction`s account list. These\n* include:\n*\n* - The program ID &mdash; it is a separate field of `Instruction`\n* - The transaction's fee-paying account &mdash; it is added during [`Message`]\n*   construction. A program may still require the fee payer as part of the\n*   account list if it directly references it.\n*\n* [`Message`]: crate::message::Message\n*\n* Programs may require signatures from some accounts, in which case they\n* should be specified as signers during `Instruction` construction. The\n* program must still validate during execution that the account is a signer.\n*/\nvar Instruction = /** @class */ (function () {\n    function Instruction() {\n    }\n    Instruction.__wrap = function (ptr) {\n        var obj = Object.create(Instruction.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Instruction.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Instruction.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_instruction_free(ptr);\n    };\n    return Instruction;\n}());\nmodule.exports.Instruction = Instruction;\n/**\n*/\nvar Instructions = /** @class */ (function () {\n    /**\n    */\n    function Instructions() {\n        var ret = wasm.instructions_constructor();\n        return Instructions.__wrap(ret);\n    }\n    Instructions.__wrap = function (ptr) {\n        var obj = Object.create(Instructions.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Instructions.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Instructions.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_instructions_free(ptr);\n    };\n    /**\n    * @param {Instruction} instruction\n    */\n    Instructions.prototype.push = function (instruction) {\n        _assertClass(instruction, Instruction);\n        var ptr0 = instruction.ptr;\n        instruction.ptr = 0;\n        wasm.instructions_push(this.ptr, ptr0);\n    };\n    return Instructions;\n}());\nmodule.exports.Instructions = Instructions;\n/**\n*/\nvar Message = /** @class */ (function () {\n    function Message() {\n    }\n    Message.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Message.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_message_free(ptr);\n    };\n    Object.defineProperty(Message.prototype, \"recent_blockhash\", {\n        /**\n        * The id of a recent ledger entry.\n        */\n        get: function () {\n            var ret = wasm.__wbg_get_message_recent_blockhash(this.ptr);\n            return Hash.__wrap(ret);\n        },\n        /**\n        * The id of a recent ledger entry.\n        * @param {Hash} arg0\n        */\n        set: function (arg0) {\n            _assertClass(arg0, Hash);\n            var ptr0 = arg0.ptr;\n            arg0.ptr = 0;\n            wasm.__wbg_set_message_recent_blockhash(this.ptr, ptr0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Message;\n}());\nmodule.exports.Message = Message;\n/**\n*/\nvar Pubkey = /** @class */ (function () {\n    /**\n    * Create a new Pubkey object\n    *\n    * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`\n    * @param {any} value\n    */\n    function Pubkey(value) {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_constructor(retptr, addHeapObject(value));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pubkey.__wrap(r0);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    Pubkey.__wrap = function (ptr) {\n        var obj = Object.create(Pubkey.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Pubkey.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Pubkey.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_pubkey_free(ptr);\n    };\n    /**\n    * Return the base58 string representation of the public key\n    * @returns {string}\n    */\n    Pubkey.prototype.toString = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_toString(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    };\n    /**\n    * Check if a `Pubkey` is on the ed25519 curve.\n    * @returns {boolean}\n    */\n    Pubkey.prototype.isOnCurve = function () {\n        var ret = wasm.pubkey_isOnCurve(this.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Checks if two `Pubkey`s are equal\n    * @param {Pubkey} other\n    * @returns {boolean}\n    */\n    Pubkey.prototype.equals = function (other) {\n        _assertClass(other, Pubkey);\n        var ret = wasm.pubkey_equals(this.ptr, other.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Return the `Uint8Array` representation of the public key\n    * @returns {Uint8Array}\n    */\n    Pubkey.prototype.toBytes = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_toBytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    /**\n    * Derive a Pubkey from another Pubkey, string seed, and a program id\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {Pubkey} owner\n    * @returns {Pubkey}\n    */\n    Pubkey.createWithSeed = function (base, seed, owner) {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(base, Pubkey);\n            var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            _assertClass(owner, Pubkey);\n            wasm.pubkey_createWithSeed(retptr, base.ptr, ptr0, len0, owner.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pubkey.__wrap(r0);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    /**\n    * Derive a program address from seeds and a program id\n    * @param {any[]} seeds\n    * @param {Pubkey} program_id\n    * @returns {Pubkey}\n    */\n    Pubkey.createProgramAddress = function (seeds, program_id) {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            _assertClass(program_id, Pubkey);\n            wasm.pubkey_createProgramAddress(retptr, ptr0, len0, program_id.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return Pubkey.__wrap(r0);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    /**\n    * Find a valid program address\n    *\n    * Returns:\n    * * `[PubKey, number]` - the program address and bump seed\n    * @param {any[]} seeds\n    * @param {Pubkey} program_id\n    * @returns {any}\n    */\n    Pubkey.findProgramAddress = function (seeds, program_id) {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            var ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            _assertClass(program_id, Pubkey);\n            wasm.pubkey_findProgramAddress(retptr, ptr0, len0, program_id.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    return Pubkey;\n}());\nmodule.exports.Pubkey = Pubkey;\nvar SystemInstruction = /** @class */ (function () {\n    function SystemInstruction() {\n    }\n    SystemInstruction.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    SystemInstruction.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_systeminstruction_free(ptr);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.createAccount = function (from_pubkey, to_pubkey, lamports, space, owner) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        uint64CvtShim[0] = space;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_createAccount(from_pubkey.ptr, to_pubkey.ptr, low0, high0, low1, high1, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {BigInt} lamports\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.createAccountWithSeed = function (from_pubkey, to_pubkey, base, seed, lamports, space, owner) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = lamports;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        uint64CvtShim[0] = space;\n        var low2 = u32CvtShim[0];\n        var high2 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_createAccountWithSeed(from_pubkey.ptr, to_pubkey.ptr, base.ptr, ptr0, len0, low1, high1, low2, high2, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.assign = function (pubkey, owner) {\n        _assertClass(pubkey, Pubkey);\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_assign(pubkey.ptr, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.assignWithSeed = function (pubkey, base, seed, owner) {\n        _assertClass(pubkey, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_assignWithSeed(pubkey.ptr, base.ptr, ptr0, len0, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.transfer = function (from_pubkey, to_pubkey, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_transfer(from_pubkey.ptr, to_pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} from_base\n    * @param {string} from_seed\n    * @param {Pubkey} from_owner\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.transferWithSeed = function (from_pubkey, from_base, from_seed, from_owner, to_pubkey, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(from_base, Pubkey);\n        var ptr0 = passStringToWasm0(from_seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(from_owner, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_transferWithSeed(from_pubkey.ptr, from_base.ptr, ptr0, len0, from_owner.ptr, to_pubkey.ptr, low1, high1);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {BigInt} space\n    * @returns {Instruction}\n    */\n    SystemInstruction.allocate = function (pubkey, space) {\n        _assertClass(pubkey, Pubkey);\n        uint64CvtShim[0] = space;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_allocate(pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} address\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.allocateWithSeed = function (address, base, seed, space, owner) {\n        _assertClass(address, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = space;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_allocateWithSeed(address.ptr, base.ptr, ptr0, len0, low1, high1, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authority\n    * @param {BigInt} lamports\n    * @returns {Array<any>}\n    */\n    SystemInstruction.createNonceAccount = function (from_pubkey, nonce_pubkey, authority, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authority, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_createNonceAccount(from_pubkey.ptr, nonce_pubkey.ptr, authority.ptr, low0, high0);\n        return takeObject(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @returns {Instruction}\n    */\n    SystemInstruction.advanceNonceAccount = function (nonce_pubkey, authorized_pubkey) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        var ret = wasm.systeminstruction_advanceNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.withdrawNonceAccount = function (nonce_pubkey, authorized_pubkey, to_pubkey, lamports) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_withdrawNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr, to_pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @param {Pubkey} new_authority\n    * @returns {Instruction}\n    */\n    SystemInstruction.authorizeNonceAccount = function (nonce_pubkey, authorized_pubkey, new_authority) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        _assertClass(new_authority, Pubkey);\n        var ret = wasm.systeminstruction_authorizeNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr, new_authority.ptr);\n        return Instruction.__wrap(ret);\n    };\n    return SystemInstruction;\n}());\nmodule.exports.SystemInstruction = SystemInstruction;\nmodule.exports.__wbindgen_json_serialize = function (arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nmodule.exports.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n};\nmodule.exports.__wbindgen_json_parse = function (arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_instruction_new = function (arg0) {\n    var ret = Instruction.__wrap(arg0);\n    return addHeapObject(ret);\n};\nmodule.exports.__wbindgen_string_new = function (arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_pubkey_new = function (arg0) {\n    var ret = Pubkey.__wrap(arg0);\n    return addHeapObject(ret);\n};\nmodule.exports.__wbindgen_string_get = function (arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = typeof (obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nmodule.exports.__wbindgen_is_undefined = function (arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\nmodule.exports.__wbindgen_number_get = function (arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = typeof (obj) === 'number' ? obj : undefined;\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n};\nmodule.exports.__wbindgen_number_new = function (arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_debug_fda1f49ea6af7a1d = function (arg0) {\n    console.debug(getObject(arg0));\n};\nmodule.exports.__wbg_error_8ff19d586a987aef = function (arg0) {\n    console.error(getObject(arg0));\n};\nmodule.exports.__wbg_info_c8f1b00be4ef10bc = function (arg0) {\n    console.info(getObject(arg0));\n};\nmodule.exports.__wbg_log_e8ba7b992c7ad0eb = function (arg0) {\n    console.log(getObject(arg0));\n};\nmodule.exports.__wbg_warn_0227db1aa6989248 = function (arg0) {\n    console.warn(getObject(arg0));\n};\nmodule.exports.__wbg_new_693216e109162396 = function () {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_stack_0ddaca5d1abfb52f = function (arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nmodule.exports.__wbg_error_09919627ac0992f5 = function (arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    }\n    finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\nmodule.exports.__wbg_new_94fb1279cf6afea5 = function () {\n    var ret = new Array();\n    return addHeapObject(ret);\n};\nmodule.exports.__wbindgen_is_function = function (arg0) {\n    var ret = typeof (getObject(arg0)) === 'function';\n    return ret;\n};\nmodule.exports.__wbindgen_is_object = function (arg0) {\n    var val = getObject(arg0);\n    var ret = typeof (val) === 'object' && val !== null;\n    return ret;\n};\nmodule.exports.__wbg_next_cabb70b365520721 = function (arg0) {\n    var ret = getObject(arg0).next;\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_next_bf3d83fc18df496e = function () {\n    return handleError(function (arg0) {\n        var ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments);\n};\nmodule.exports.__wbg_done_040f966faa9a72b3 = function (arg0) {\n    var ret = getObject(arg0).done;\n    return ret;\n};\nmodule.exports.__wbg_value_419afbd9b9574c4c = function (arg0) {\n    var ret = getObject(arg0).value;\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_iterator_4832ef1f15b0382b = function () {\n    var ret = Symbol.iterator;\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_get_a9cab131e3152c49 = function () {\n    return handleError(function (arg0, arg1) {\n        var ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments);\n};\nmodule.exports.__wbg_call_ae78342adc33730a = function () {\n    return handleError(function (arg0, arg1) {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments);\n};\nmodule.exports.__wbg_newwithlength_e80fb11cf19c1628 = function (arg0) {\n    var ret = new Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_set_561aac756158708c = function (arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n};\nmodule.exports.__wbg_isArray_6721f2e508996340 = function (arg0) {\n    var ret = Array.isArray(getObject(arg0));\n    return ret;\n};\nmodule.exports.__wbg_push_40c6a90f1805aa90 = function (arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n};\nmodule.exports.__wbg_values_b1b9e8c63dbe01c2 = function (arg0) {\n    var ret = getObject(arg0).values();\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_buffer_7af23f65f6c64548 = function (arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_new_cc9018bd6f283b6f = function (arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\nmodule.exports.__wbg_set_f25e869e4565d2a2 = function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\nmodule.exports.__wbg_length_0acb1cf9bbaf8519 = function (arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\nmodule.exports.__wbg_instanceof_Uint8Array_edb92795fc0c63b4 = function (arg0) {\n    var ret = getObject(arg0) instanceof Uint8Array;\n    return ret;\n};\nmodule.exports.__wbindgen_debug_string = function (arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\nmodule.exports.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\nmodule.exports.__wbindgen_memory = function () {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\nvar path = require('path').join(__dirname, 'bridge_bg.wasm');\nvar bytes = require('fs').readFileSync(path);\nvar wasmModule = new WebAssembly.Module(bytes);\nvar wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}