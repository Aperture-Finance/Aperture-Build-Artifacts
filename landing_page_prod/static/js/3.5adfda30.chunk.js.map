{"version":3,"sources":["assets/images/homora/avalaunch.svg","assets/images/homora/avax.svg","assets/images/homora/mim.svg","assets/images/homora/traderjoe.svg","assets/images/homora/usdc.svg","assets/images/homora/usdc-avax.svg","assets/images/homora/pangolin.svg","assets/images/homora/Token.png","components/Strategy/index.js","../../src/index.tsx","../node_modules/react-hook-inview/dist/esm/useObserver.js","../node_modules/react-hook-inview/dist/esm/useInView.js"],"names":["Strategy","useApp","language","width","text","useToken","anchor","textContext","strategy","React","useState","view","setView","useInView","threshold","ref","isVisible","useEffect","setTimeout","iconOne","avax","iconTwo","usdc","background","dapp","traderjoe","strategy_name","dapp_name","apr","mim","token","pangolin","id","className","title","transitionDuration","visible","map","l","i","o","src","alt","pool","toFixed","props","maxIsVisible","setMaxIsVisible","delay","animated","WrapperTag","ChildTag","count","timeout","clearTimeout","increment","childClassName","style","transition","transform","opacity","useObserver","callback","root","rootMargin","externalState","target","useRef","observer","setTarget","useCallback","node","current","unobserve","disconnect","IntersectionObserver","observe","unobserveOnEnter","onEnter","onLeave","inView","entry","state","setState","thresholds","some","t","intersectionRatio","isIntersecting"],"mappings":"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","file":"static/js/3.5adfda30.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avalaunch.122105e1.svg\";","export default __webpack_public_path__ + \"static/media/avax.d364d3ce.svg\";","export default __webpack_public_path__ + \"static/media/mim.4d4c9e35.svg\";","export default __webpack_public_path__ + \"static/media/traderjoe.04e7e197.svg\";","export default __webpack_public_path__ + \"static/media/usdc.1403efe7.svg\";","export default __webpack_public_path__ + \"static/media/usdc-avax.a0dee3d2.svg\";","export default __webpack_public_path__ + \"static/media/pangolin.092b3f44.svg\";","export default __webpack_public_path__ + \"static/media/Token.50b8b137.png\";","import React from 'react'\nimport { useApp } from '../../context/Context';\nimport { useToken } from '../../context/TokenContext';\nimport textContext from '../../textContext';\nimport { background, avax, mim, traderjoe, usdc_avax, usdc, pangolin, token } from '../../assets/images/homora';\n\n// Hook for checking viewport + animation package\nimport { useInView } from 'react-hook-inview';\nimport SmoothList from 'react-smooth-list';\n\nexport default function Strategy() {\n\n\tconst { language, width } = useApp();\n\tconst { anchor } = useToken();\n\tconst text = textContext[language].strategy;\n\n\tconst [view, setView] = React.useState(false);\n\tconst [ref, isVisible] = useInView({\n\t\tthreshold: width > 900 ? 0.5 : 0,\n\t})\n\n\t// Trigger setView on viewport enter\n\tReact.useEffect(() => {\n\t\tif (width < 900) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tisVisible ? setView(true) : setView(false)\n\t\t\t}, 500)\n\t\t} else {\n\t\t\tisVisible ? setView(true) : setView(false)\n\t\t}\n\t}, [isVisible, width])\n\n\tconst strategy = [\n\t\t{ iconOne: avax, iconTwo: usdc, background: background, dapp: traderjoe, strategy_name: 'AVAX-USDC', dapp_name: 'Trader Joe', apr: 21.97 },\n\t\t{ iconOne: avax, iconTwo: mim, background: background, dapp: traderjoe, strategy_name: 'AVAX-MIM', dapp_name: 'Trader Joe', apr: 19.77 },\n\t\t{ iconOne: avax, iconTwo: token, background: background, dapp: pangolin, strategy_name: 'AVAX-USDC.e', dapp_name: 'Pangolin', apr: 20.23 },\n\n\t];\n\n\treturn (\n\t\t<div id=\"strategy\">\n\t\t\t<div ref={ref} className=\"padding\">\n\t\t\t\t<p className=\"textHeader\">{text.title}</p>\n\n\t\t\t\t<SmoothList transitionDuration={1000} visible={view} className=\"cardContainer\">\n\t\t\t\t\t{\n\t\t\t\t\t\tstrategy.map((l, i) => (\n\t\t\t\t\t\t\t<div key={i} className=\"strategyCard\" o\n\t\t\t\t\t\t\t// nClick={() => window.open(\"https://app.aperture.finance/\", '_blank', 'noopener,noreferrer')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<img src={l.iconOne} alt={l.pool} className=\"left-image-icon\" />\n\t\t\t\t\t\t\t\t\t<img src={l.iconTwo} alt={l.pool} className=\"right-image-icon\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"title\">{l.strategy_name}</div>\n\t\t\t\t\t\t\t\t<div className=\"dapp\">\n\t\t\t\t\t\t\t\t\t<img src={l.dapp} alt={l.dapp_name} />\n\t\t\t\t\t\t\t\t\t{l.dapp_name}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"gradient-text\">\n\t\t\t\t\t\t\t\t\t{`Projected APY: ${l.apr.toFixed(2)} %`}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<img src={l.background} alt={l.dapp_name} className=\"background\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</SmoothList>\n\n\t\t\t</div>\n\t\t</div>\n\t)\n};","import React, { JSXElementConstructor, PropsWithChildren, useEffect, useState } from \"react\";\n  \ninterface Props {\n    transitionDuration?: number;\n    delay?: number;\n    wrapperTag?: JSXElementConstructor<any>;\n    childTag?: JSXElementConstructor<any>;\n    className?: string;\n    childClassName?: string;\n    visible?: boolean;\n    animated?: boolean;\n    onComplete?: () => any;\n}\n  \nconst SmoothList = (props: PropsWithChildren<Props>) => {\n    const [maxIsVisible, setMaxIsVisible] = useState(0);\n\n    const delay = props.delay || 50,\n          animated = props.animated ?? true,\n          transitionDuration = props.transitionDuration || 400,\n          visible = typeof props.visible === \"undefined\" ? true : props.visible,\n          WrapperTag = props.wrapperTag || \"div\",\n          ChildTag = props.childTag || \"div\";\n  \n    useEffect(() => {\n        let count = React.Children.count(props.children);\n        if (!visible) {\n            // Animate all children out\n            count = 0;\n        }\n\n        if (count == maxIsVisible) {\n            // We're done updating maxVisible, notify when animation is done\n            const timeout = setTimeout(() => {\n                if (props.onComplete) props.onComplete();\n            }, transitionDuration);\n            \n            return () => clearTimeout(timeout)\n        }\n\n        // Move maxIsVisible toward count\n        const increment = count > maxIsVisible ? 1 : -1;\n        const timeout = setTimeout(() => {\n            setMaxIsVisible(maxIsVisible + increment);\n        }, delay);\n        \n        return () => clearTimeout(timeout)\n    }, [\n        React.Children.count(props.children),\n        delay,\n        maxIsVisible,\n        visible,\n        transitionDuration,\n    ])\n  \n    return (\n        <WrapperTag className={props.className}>\n            {animated ? React.Children.map(props.children, (child, i) => {\n                return (\n                    <ChildTag\n                        className={props.childClassName}\n                        style={{\n                        transition: `opacity ${transitionDuration}ms, transform ${transitionDuration}ms`,\n                        transform: maxIsVisible > i ? \"none\" : \"translateY(20px)\",\n                        opacity: maxIsVisible > i ? 1 : 0,\n                        }}\n                    >\n                        {child}\n                    </ChildTag>\n                )\n            }) : props.children}\n        </WrapperTag>\n    )\n}\n\nexport default SmoothList;","import { useRef, useCallback, } from \"react\";\n/**\n * useObserver\n * @param callback IntersectionObserverCallback\n * @param options IntersectionObserverInit\n * @param externalState React.ComponentState[]\n */\nconst useObserver = (callback, { root, rootMargin, threshold } = {}, externalState = []) => {\n    const target = useRef(null);\n    const observer = useRef(null);\n    const setTarget = useCallback((node) => {\n        if (target.current && observer.current) {\n            observer.current.unobserve(target.current);\n            observer.current.disconnect();\n            observer.current = null;\n        }\n        if (node) {\n            observer.current = new IntersectionObserver(callback, { root, rootMargin, threshold });\n            observer.current.observe(node);\n            target.current = node;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [target, root, rootMargin, threshold, ...externalState]);\n    return setTarget;\n};\nexport default useObserver;\n","import { useEffect, useState, useCallback, } from \"react\";\nimport useObserver from \"./useObserver\";\n/**\n * useInView\n * @param options IntersectionObserverInit\n * @param externalState React.ComponentState[]\n */\nconst useInView = ({ root, rootMargin, threshold, unobserveOnEnter, target, onEnter, onLeave } = {}, externalState = []) => {\n    const [state, setState] = useState({\n        inView: false,\n        entry: null,\n        observer: null,\n    });\n    const callback = useCallback(([entry], observer) => {\n        const inThreshold = observer.thresholds.some((t) => entry.intersectionRatio >= t);\n        const inView = inThreshold && entry.isIntersecting;\n        setState({\n            inView,\n            entry,\n            observer,\n        });\n        // unobserveOnEnter\n        if (inView && unobserveOnEnter) {\n            observer.unobserve(entry.target);\n            observer.disconnect();\n        }\n        // Legacy callbacks\n        if (inView) {\n            onEnter === null || onEnter === void 0 ? void 0 : onEnter(entry, observer);\n        }\n        else {\n            onLeave === null || onLeave === void 0 ? void 0 : onLeave(entry, observer);\n        }\n    }, [onEnter, onLeave, unobserveOnEnter]);\n    const setTarget = useObserver(callback, { root, rootMargin, threshold }, [unobserveOnEnter, ...externalState]);\n    // Legacy 'target' option\n    useEffect(() => {\n        if (target === null || target === void 0 ? void 0 : target.current)\n            setTarget(target.current);\n    }, [target, setTarget]);\n    return [setTarget, state.inView, state.entry, state.observer];\n};\nexport default useInView;\n"],"sourceRoot":""}